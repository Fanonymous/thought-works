@import "./var.scss";
@import "./config.scss";

@mixin res($key, $map: $--breakpoints) {
  // 循环断点Map，如果存在则返回
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}

 @mixin b($block) {
  $B: $namespace + '-' + $block !global;
  .#{$B} {
    @content;
  }
}

@mixin m($modifier) {
  $selector: &;
  $currentSelector: "";
  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ","};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

@mixin e($name) {
  &#{$element-separator}#{$name} {
    @content;
  }
}

@mixin triangleAfter ($where){
  &::after{
    content: '';
    position: absolute;
    border: 6px solid white;
    border-top-color: transparent;
    border-left-color: transparent;
    border-right-color: transparent;
    border-bottom-color: transparent;
    @if $where== 'top' {
      bottom: -11px;
      border-top-color: white;
    }
    @if $where== 'right' {
      left: -11px;
      border-right-color:white;
    }
    @if $where== 'left' {
      right: -11px;
      border-left-color:white;
    }
    @if $where== 'bottom' {
      top: -11px;
      border-bottom-color: white;
    }
    @content;
  };
}

@mixin triangleBefore ($where){
  &::before{
    content: '';
    position: absolute;
    border: 6px solid rgb(172, 171, 171);
    border-top-color: transparent;
    border-left-color: transparent;
    border-right-color: transparent;
    border-bottom-color: transparent;
    @if $where== 'top' {
      bottom: -12px;
      border-top-color: rgb(172, 171, 171);
    }
    @if $where== 'right' {
      left:-12px;
      border-right-color: rgb(172, 171, 171);
    }
    @if $where== 'left' {
      right: -12px;
      border-left-color: rgb(172, 171, 171);
    }
    @if $where== 'bottom' {
      top: -12px;
      border-bottom-color: rgb(172, 171, 171);
    }
    @content;
  };
}